apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies.xutils
    api rootProject.ext.dependencies.appcompat
    api rootProject.ext.dependencies.recyclerview
    api rootProject.ext.dependencies.constraintlayout
    api rootProject.ext.dependencies.cardView
    api rootProject.ext.dependencies.glide
    api rootProject.ext.dependencies.gson
    api rootProject.ext.dependencies.material
    api rootProject.ext.dependencies.sweetalert


    api rootProject.ext.dependencies.refresh_layout_kernel//核心必须依赖
    api rootProject.ext.dependencies.refresh_header_classics//经典刷新头
    api rootProject.ext.dependencies.refresh_header_radar//雷达刷新头
    api rootProject.ext.dependencies.refresh_header_falsify//虚拟刷新头
    api rootProject.ext.dependencies.refresh_header_material//谷歌刷新头
    api rootProject.ext.dependencies.refresh_header_two_level//二级刷新头
    api rootProject.ext.dependencies.refresh_footer_ball//球脉冲加载
    api rootProject.ext.dependencies.refresh_footer_classics//经典加载
    api rootProject.ext.dependencies.fresco
    api rootProject.ext.dependencies.PickerView

}
